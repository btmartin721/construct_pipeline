install.packages("devtools")
library(devtools)
install_github("https://github.com/EricArcher/strataG.git")
install_github("EricArcher/strataG")
install_github("EricArcher/strataG")
install.packages("igraph")
install.packages("phangorn")
library("igraph")
library("phangorn")
install_github("EricArcher/strataG")
install.packages("ade4")
library("ade4")
install_github("EricArcher/strataG")
install.packages("dplyr")
install_github("EricArcher/strataG")
install.packages("DBI")
install.packages("apex")
install_github("EricArcher/strataG")
install.packages("seqinr")
install_github("EricArcher/strataG")
install.packages("spdep")
library("apex")
install.packages("vegan")
library("apex")
install_github("EricArcher/strataG")
install.packages("htmlwidgets")
install_github("EricArcher/strataG")
install.packages("Formula")
install_github("EricArcher/strataG")
install.packages("acepack")
install_github("EricArcher/strataG")
install.packages("base64enc")
install_github("EricArcher/strataG")
install.packages("latticeExtra")
install_github("EricArcher/strataG")
install.packages("htmlTable")
install_github("EricArcher/strataG")
install.packages("gsl")
install_github("EricArcher/strataG")
install.packages("ADGofTest")
install_github("EricArcher/strataG")
install.packages("adegenet")
install.packages("adegenet")
install.packages("ape")
install.packages("apex")
install.packages("knitr")
install.packages("rmarkdown")
install.packages("testhat")
install_github("EricArcher/strataG")
library("devtools")
install_github("EricArcher/strataG")
install.packages("stabledist")
install_github("EricArcher/strataG")
install.packages("pcaPP")
install_github("EricArcher/strataG")
install.packages("pspline")
install_github("EricArcher/strataG")
install.packages("githubinstall")
gh_suggest("strataG")
library("githubinstall")
gh_suggest("strataG")
gh_list_packages("strataG")
install.packages("numDeriv")
install_github("EricArcher/strataG")
library(devtools)
install_github("EricArcher/strataG")
remove.packages("devtools")
install.packages("devtools")
quit()
remove.packages("devtools")
install.packages("devtools")
quit()
library("devtools")
install_github("EricArcher/strataG")
install.packages("RJSONIO")
install_github("EricArcher/strataG")
quit()
remove.packages("devtools")
quit()
install.packages("devtools")
quit()
library("devtools")
install_github("EricArcher/strataG")
install.packages("mapdata")
install_github("EricArcher/strataG")
install.packages("spatstat")
quit()
q()
load("~/Work/BOX_Turtle_Genomics/Analyses/HZAR/Final_Analysis/BOX_HZAR_run.RData")
q()
install.packages("conStruct")
if (!require("conStruct")) install.packages('conStruct')
library("conStruct")
vignette(topic="format-data",package="conStruct")
if (!require("conStruct")) install.packages('conStruct')
library("conStruct")
# Formatting data
vignette(topic="format-data",package="conStruct")
View(conStruct.data$geoDist)
View(conStruct.data)
library("parallel")
library("foreach")
library("doParallel")
library("conStruct")
?source
setwd("~/Work/Scripts/construct_pipeline")
